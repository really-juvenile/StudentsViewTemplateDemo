
@model StudentsViewTemplateDemo.Models.Student

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Add Student</title>
</head>
<body>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    @using (Html.BeginForm("AddStudent", "Student", FormMethod.Post, new { @id = "studentForm" }))
    {
        <div class="form-group">
            @Html.LabelFor(model => model.Name)
            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Age)
            @Html.TextBoxFor(model => model.Age, new { @class = "form-control", type = "number" })
            @Html.ValidationMessageFor(model => model.Age)
        </div>

        <h3>Address</h3>
        <div class="form-group">
            @Html.LabelFor(model => model.Address.Country)
            @Html.TextBoxFor(model => model.Address.Country, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Address.Country)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.City)
            @Html.TextBoxFor(model => model.Address.City, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Address.City)
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.State)
            @Html.TextBoxFor(model => model.Address.State, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Address.State)
        </div>

        <button type="submit" class="btn btn-primary">Add Student</button>
    }

    <div>
        @Html.ActionLink("Back to List", "GetAllStudents")
    </div>

</body>
</html>
